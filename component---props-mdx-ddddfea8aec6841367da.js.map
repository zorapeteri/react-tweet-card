{"version":3,"sources":["webpack:///../props.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","style","fontSize","href","__position","__code","__scope","TweetCard","ThemeHandler","OutsideContainer","ParentContainer","Playground","author","name","username","image","isVerified","isProtected","tweet","time","Date","source","permalink","theme","colors","gradientBackground","blurredBackground","clickableProfileLink","fitInsideContainer","isMDXComponent"],"mappings":"sUAYaA,EAAe,Q,2LAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAcA,QAAQ,iBACtB,kBACE,GAAM,SADR,SAGA,qBAAOC,MAAO,CACZC,SAAU,SAEZ,yBACI,sBACI,8BACA,qCACA,8BACA,uCACA,6CAGR,yBACI,sBACI,sBAAI,iBAAGC,KAAK,+BAAR,WACJ,wEACA,yGACA,uBACA,mCAEJ,sBACI,kCACA,4CACA,gCACA,uBACA,mCAEJ,sBACI,sCACA,sDACA,gCACA,uBACA,mCAEJ,sBACI,mCACA,kEACA,gCACA,uBACA,mCAEJ,sBACI,wCACA,kEACA,iCACA,+BACA,mCAEJ,sBACI,wCACA,oEACA,iCACA,+BACA,mCAEJ,sBACI,0CACA,qFACA,iCACA,+BACA,mCAEJ,sBACI,yCACA,qFACA,iCACA,+BACA,mCAEJ,sBACI,+BACA,sDACA,gCACA,uBACA,mCAEJ,sBACI,8BACA,mHACA,uCACA,uBACA,mCAEJ,sBACI,gCACA,0FACA,gCACA,uBACA,mCAEJ,sBACI,mCACA,uKACA,gCACA,uBACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,wBAAR,gBACJ,6CACA,2DACA,uBACA,mCAEJ,sBACI,iCACA,kDACA,gCACA,uBACA,mCAEJ,sBACI,8CACA,0EACA,iCACA,+BACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,gCAAR,eACJ,gGACA,yDACA,uBACA,mCAEJ,sBACI,qCACA,2CACA,gCACA,2BACA,mCAEJ,sBACI,sCACA,4CACA,gCACA,2BACA,mCAEJ,sBACI,mCACA,yCACA,gCACA,2BACA,mCAEJ,sBACI,8CACA,yLACA,iCACA,+BACA,mCAEJ,sBACI,qCACA,8FACA,iCACA,8BACA,mCAEJ,sBACI,wCACA,0FACA,iCACA,8BACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,mBAAR,UACJ,wDACA,kDACA,iCACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,mBAAR,WACJ,sFACA,oEACA,4BACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,gCAAR,uBACJ,gEACA,iCACA,+BACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,+BAAR,sBACJ,+DACA,iCACA,+BACA,mCAEJ,sBACI,sBAAI,iBAAGA,KAAK,uBAAR,WACJ,0FACA,iCACA,+BACA,mCAEJ,sBACI,4CACA,wKACA,iCACA,+BACA,qCAIR,yDACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,y3BAAg4BC,SAAO,GACx6BP,QACAH,kBACAW,cACAC,iBACAC,qBACAC,oBACAC,gBAPw6B,gBAQx6Bf,IARw6B,EASx6BH,eATw6B,GAUv6BO,QAAQ,cACX,YAAC,IAAD,CAAkBA,QAAQ,oBACtB,YAAC,IAAD,CAAiBA,QAAQ,mBACrB,YAAC,IAAD,CAAWY,OAAQ,CACnBC,KAAM,aACNC,SAAU,YACVC,MAAO,+EACPC,YAAY,EACZC,aAAa,GACZC,MAAK,uKAGwBC,KAAM,IAAIC,KAAK,KAAM,EAAG,GAAI,EAAG,IAC/DC,OAAO,YAAYC,UAAU,0DAA0DC,MAAM,QAAQC,OAAQ,GAAIC,oBAAoB,EAAOC,mBAAmB,EAAOC,sBAAsB,EAAOC,oBAAoB,EAAO5B,QAAQ,uB,yLAQhPH,EAAWgC,gBAAiB","file":"component---props-mdx-ddddfea8aec6841367da.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/zora.peteri/projects/react-tweet-card/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport TweetCard from './TweetCard';\nimport ThemeHandler from './ThemeHandler';\nimport { OutsideContainer, ParentContainer } from './components/DemoContainers';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <ThemeHandler mdxType=\"ThemeHandler\" />\n    <h1 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h1>\n    <table style={{\n      fontSize: '14px'\n    }}>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Type</th>\n            <th>Default value</th>\n            <th>Required/Optional</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><a href=\"/intro#tweet-author-options\">author</a></td>\n            <td>Information about the author user of the tweet</td>\n            <td>{`{ name, username, image, isVerified?, isBusiness?, isGovernment? isProtected? }`}</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- name</td>\n            <td>Name of the author</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- username</td>\n            <td>Twitter handle of the author</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- image</td>\n            <td>URL to the profile picture of the author</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- isVerified</td>\n            <td>Indicates whether the author is verified</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- isBusiness</td>\n            <td>Indicates whether the author is a business</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- isGovernment</td>\n            <td>Indicates whether the author is a government representative</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- isProtected</td>\n            <td>Indicates whether the author's account is protected/private</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>tweet</td>\n            <td>The text of the tweet itself</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>time</td>\n            <td>Time of tweeting. If passed in as a Date object, it will be formatted as it is on Twitter</td>\n            <td>Date | string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>source</td>\n            <td>The source application for the tweet (e.g. \"Twitter for iPhone\")</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>permalink</td>\n            <td>The URL for the tweet (or anything, it's up to you). Clicking the twitter logo or the time of tweeting on the card will take you to this URL.</td>\n            <td>string</td>\n            <td></td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/intro#adding-images\">tweetImages</a></td>\n            <td>Images in the tweet</td>\n            <td>{`Array<{ src, isVideoThumbnail? }>`}</td>\n            <td></td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- src</td>\n            <td>Source URL for the image</td>\n            <td>string</td>\n            <td></td>\n            <td>Required</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- isVideoThumbnail</td>\n            <td>Indicates whether the image is a video thumbnail</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/intro#displaying-engagement\">engagement</a></td>\n            <td>The number of engagements (replies, RTs, likes) the tweet has received</td>\n            <td>{`{ replies?, retweets?, likes? }`}</td>\n            <td></td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- replies</td>\n            <td>Number of replies</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- retweets</td>\n            <td>Number of retweets</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>&nbsp;&nbsp;- likes</td>\n            <td>Number of likes</td>\n            <td>number</td>\n            <td>0</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>clickableProfileLink</td>\n            <td>Creates a clickable visual effect on the name and profile picture of the author. If turned on, clicking these elements will open the user's profile on Twitter.</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>showDetails</td>\n            <td>Controls wheter the time and source of the tweet should be displayed</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>showEngagement</td>\n            <td>Controls wheter the engagements of the tweet should be displayed</td>\n            <td>boolean</td>\n            <td>true</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/styling#themes\">theme</a></td>\n            <td>The theme setting for the card</td>\n            <td>\"light\" | \"dim\" | \"dark\"</td>\n            <td>\"light\"</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/styling#colors\">colors</a></td>\n            <td>Gives you the option to override the colors used in the card</td>\n            <td>{`{ primary, secondary, accent, background }`}</td>\n            <td>{`{}`}</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/styling#gradient-background\">gradientBackground</a></td>\n            <td>Sets the card's background to gradient</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/styling#blurred-background\">blurredBackground</a></td>\n            <td>Sets the card's background to blurred</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td><a href=\"/intro#using-emojis\">emojis</a></td>\n            <td>If true, engagement icons will be replaced with emoji characters</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n        <tr>\n            <td>fitInsideContainer</td>\n            <td>Scales the contents of the card to perfectly fit inside its parent container. Only works if the element is capable of overflowing on the page.</td>\n            <td>boolean</td>\n            <td>false</td>\n            <td>Optional</td>\n        </tr>\n    </tbody>\n    </table>\n    <p>{`Try them out on this playground:`}</p>\n    <Playground __position={2} __code={'<OutsideContainer>\\n  <ParentContainer>\\n    <TweetCard\\n      author={{\\n        name: \\'dan mentos\\',\\n        username: \\'DanMentos\\',\\n        image:\\n          \\'https://pbs.twimg.com/profile_images/548378022768701441/2zz0Vk61_400x400.png\\',\\n        isVerified: false,\\n        isProtected: false,\\n      }}\\n      tweet={`[introducing girlfriend to my family]\\n                  me: this is my girlfriend janine\\n                  janine: hi\\n                  wife: what the fuck`}\\n      time={new Date(2016, 7, 11, 6, 14)} // try a string instead!\\n      source=\\\"TweetDeck\\\"\\n      permalink=\\\"https://twitter.com/DanMentos/status/763589479055495168\\\"\\n      theme=\\\"light\\\"\\n      colors={{}}\\n      gradientBackground={false}\\n      blurredBackground={false}\\n      clickableProfileLink={false}\\n      fitInsideContainer={false}\\n    />\\n  </ParentContainer>\\n</OutsideContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      TweetCard,\n      ThemeHandler,\n      OutsideContainer,\n      ParentContainer,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <OutsideContainer mdxType=\"OutsideContainer\">\n        <ParentContainer mdxType=\"ParentContainer\">\n            <TweetCard author={{\n            name: 'dan mentos',\n            username: 'DanMentos',\n            image: 'https://pbs.twimg.com/profile_images/548378022768701441/2zz0Vk61_400x400.png',\n            isVerified: false,\n            isProtected: false\n          }} tweet={`[introducing girlfriend to my family]\n                    me: this is my girlfriend janine\n                    janine: hi\n                    wife: what the fuck`} time={new Date(2016, 7, 11, 6, 14)} // try a string instead!\n          source=\"TweetDeck\" permalink=\"https://twitter.com/DanMentos/status/763589479055495168\" theme=\"light\" colors={{}} gradientBackground={false} blurredBackground={false} clickableProfileLink={false} fitInsideContainer={false} mdxType=\"TweetCard\" />\n        </ParentContainer>\n    </OutsideContainer>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}